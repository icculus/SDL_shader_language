/**
 * SDL_shader_tools; tools for SDL GPU shader support.
 *
 * Please see the file LICENSE.txt in the source's root directory.
 */

#ifndef _INCL_SDL_SHADER_BYTECODE_H_
#define _INCL_SDL_SHADER_BYTECODE_H_

#include "SDL.h"

#ifdef __cplusplus
extern "C" {
#endif

#define SDL_SHADER_BYTECODE_MAGIC "SDLSHADERBC"
#define SDL_SHADER_BYTECODE_VERSION 1

typedef enum SDL_SHADER_BytecodeTag
{
    SDL_SHADER_BCTAG_FUNCTION,
    SDL_SHADER_BCTAG_DEBUGTABLE,
    SDL_SHADER_BCTAG_OP_NOP,
    SDL_SHADER_BCTAG_OP_NEGATE,
    SDL_SHADER_BCTAG_OP_COMPLEMENT,
    SDL_SHADER_BCTAG_OP_NOT,
    SDL_SHADER_BCTAG_OP_MULTIPLY,
    SDL_SHADER_BCTAG_OP_DIVIDE,
    SDL_SHADER_BCTAG_OP_MODULO,
    SDL_SHADER_BCTAG_OP_ADD,
    SDL_SHADER_BCTAG_OP_SUBTRACT,
    SDL_SHADER_BCTAG_OP_SHIFTLEFT,
    SDL_SHADER_BCTAG_OP_SHIFTRIGHT,
    SDL_SHADER_BCTAG_OP_LESSTHAN,
    SDL_SHADER_BCTAG_OP_GREATERTHAN,
    SDL_SHADER_BCTAG_OP_LESSTHANOREQUAL,
    SDL_SHADER_BCTAG_OP_GREATERTHANOREQUAL,
    SDL_SHADER_BCTAG_OP_EQUAL,
    SDL_SHADER_BCTAG_OP_NOTEQUAL,
    SDL_SHADER_BCTAG_OP_BINARYAND,
    SDL_SHADER_BCTAG_OP_BINARYOR,
    SDL_SHADER_BCTAG_OP_BINARYXOR,
    SDL_SHADER_BCTAG_OP_LOGICALAND,
    SDL_SHADER_BCTAG_OP_LOGICALOR,
    SDL_SHADER_BCTAG_OP_LITERALINT,
    SDL_SHADER_BCTAG_OP_LITERALFLOAT,
    SDL_SHADER_BCTAG_OP_LITERALINT4,
    SDL_SHADER_BCTAG_OP_LITERALFLOAT4,
    SDL_SHADER_BCTAG_OP_IF,
    SDL_SHADER_BCTAG_OP_CALL,
    SDL_SHADER_BCTAG_OP_DISCARD,
    SDL_SHADER_BCTAG_OP_BREAK,
    SDL_SHADER_BCTAG_OP_CONTINUE,
    SDL_SHADER_BCTAG_OP_LOOP,
    SDL_SHADER_BCTAG_OP_SWITCH,
    SDL_SHADER_BCTAG_OP_RETURN,
    SDL_SHADER_BCTAG_OP_PHI,
    SDL_SHADER_BCTAG_OP_SWIZZLE,
    SDL_SHADER_BCTAG_OP_ALL,
    SDL_SHADER_BCTAG_OP_ANY,
    SDL_SHADER_BCTAG_OP_ROUND,
    SDL_SHADER_BCTAG_OP_ROUNDEVEN,
    SDL_SHADER_BCTAG_OP_MOD,
    SDL_SHADER_BCTAG_OP_TRUNC,
    SDL_SHADER_BCTAG_OP_ABS,
    SDL_SHADER_BCTAG_OP_SIGN,
    SDL_SHADER_BCTAG_OP_FLOOR,
    SDL_SHADER_BCTAG_OP_CEIL,
    SDL_SHADER_BCTAG_OP_FRACT,
    SDL_SHADER_BCTAG_OP_RADIANS,
    SDL_SHADER_BCTAG_OP_DEGREES,
    SDL_SHADER_BCTAG_OP_SIN,
    SDL_SHADER_BCTAG_OP_COS,
    SDL_SHADER_BCTAG_OP_TAN,
    SDL_SHADER_BCTAG_OP_ASIN,
    SDL_SHADER_BCTAG_OP_ACOS,
    SDL_SHADER_BCTAG_OP_ATAN,
    SDL_SHADER_BCTAG_OP_SINH,
    SDL_SHADER_BCTAG_OP_COSH,
    SDL_SHADER_BCTAG_OP_TANH,
    SDL_SHADER_BCTAG_OP_ASINH,
    SDL_SHADER_BCTAG_OP_ACOSH,
    SDL_SHADER_BCTAG_OP_ATANH,
    SDL_SHADER_BCTAG_OP_ATAN2,
    SDL_SHADER_BCTAG_OP_POW,
    SDL_SHADER_BCTAG_OP_EXP,
    SDL_SHADER_BCTAG_OP_LOG,
    SDL_SHADER_BCTAG_OP_EXP2,
    SDL_SHADER_BCTAG_OP_LOG2,
    SDL_SHADER_BCTAG_OP_SQRT,
    SDL_SHADER_BCTAG_OP_RSQRT,
    SDL_SHADER_BCTAG_OP_MIN,
    SDL_SHADER_BCTAG_OP_MAX,
    SDL_SHADER_BCTAG_OP_CLAMP,
    SDL_SHADER_BCTAG_OP_MIX,
    SDL_SHADER_BCTAG_OP_STEP,
    SDL_SHADER_BCTAG_OP_SMOOTHSTEP,
    SDL_SHADER_BCTAG_OP_MAD,
    SDL_SHADER_BCTAG_OP_FREXP,
    SDL_SHADER_BCTAG_OP_LDEXP,
    SDL_SHADER_BCTAG_OP_LEN,
    SDL_SHADER_BCTAG_OP_DISTANCE,
    SDL_SHADER_BCTAG_OP_DOT,
    SDL_SHADER_BCTAG_OP_CROSS,
    SDL_SHADER_BCTAG_OP_NORMALIZE,
    SDL_SHADER_BCTAG_OP_FACEFORWARD,
    SDL_SHADER_BCTAG_OP_REFLECT,
    SDL_SHADER_BCTAG_OP_REFRACT,
    SDL_SHADER_BCTAG_OP_TRANSPOSE,
    SDL_SHADER_BCTAG_OP_SAMPLE,
    SDL_SHADER_BCTAG_TOTAL,
    SDL_SHADER_BCTAG_MAX = 0xFFFFFFFF
} SDL_SHADER_BytecodeTag;

#ifdef __cplusplus
}
#endif

#endif  /* include-once blocker. */

/* end of SDL_shader_bytecode.h ... */

